service: p-experiment-backend
frameworkVersion: 3
provider:
  name: aws
  deploymentMethod: direct
  runtime: provided.al2
  region: eu-west-2
  memorySize: 1024

package:
  individually: true
  artifact: build/bootstrap.zip

plugins:
  - serverless-iam-roles-per-function
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 3

functions:
  putPokemon:
    handler: main.putPokemon
    events:
      - http:
          path: /pokemon
          method: PUT
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:eu-west-2:737830503619:table/pokemons
      - Effect: "Allow"
        Action:
          - dynamodb:BatchWriteItem
        Resource: arn:aws:dynamodb:eu-west-2:737830503619:table/pokemons
      - Effect: "Allow"
        Action:
          - ses:SendEmail
        Resource: arn:aws:ses:eu-west-2:737830503619:identity/tnicosia@2innovation.it
      - Effect: "Allow"
        Action:
          - ses:SendEmail
        Resource: arn:aws:ses:eu-west-2:737830503619:identity/pstalteri@2innovation.it
      - Effect: "Allow"
        Action:
          - s3:PutObject
        Resource: arn:aws:s3:::pie-nele-bucket

  getPokemons:
    handler: main.getPokemons
    events:
      - http:
          path: /pokemon
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Scan
        Resource: arn:aws:dynamodb:eu-west-2:737830503619:table/pokemons

  getPokemon:
    handler: main.getPokemon
    events:
      - http:
          path: /pokemon/{pokemonID}
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:GetItem
        Resource: arn:aws:dynamodb:eu-west-2:737830503619:table/pokemons

  deletePokemon:
    handler: main.deletePokemon
    events:
      - http:
          path: /pokemon/{pokemonID}
          method: DELETE
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:DeleteItem
        Resource: arn:aws:dynamodb:eu-west-2:737830503619:table/pokemons

  patchPokemon:
    handler: main.patchPokemon
    events:
      - http:
          path: /pokemon/{pokemonID}
          method: PATCH
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Content-Encoding
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:updateItem
        Resource: arn:aws:dynamodb:eu-west-2:737830503619:table/pokemons
  # EXAMPLEputUser:
  #   handler: main.EXAMPLEputUser
  #   events:
  #     - http:
  #         path: /user
  #         method: PUT
  #         cors:
  #           origin: "*"
  #           headers:
  #             - Content-Type
  #             - Content-Encoding
  #   iamRoleStatements:
  #     - Effect: "Allow"
  #       Action:
  #         - dynamodb:PutItem
  #       Resource: "arn:aws:dynamodb:*:yourAWSAccountNumber:table/yourTableName"
